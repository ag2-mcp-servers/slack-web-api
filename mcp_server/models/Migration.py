# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:25:57+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field

from . import DefsOkFalse, DefsOkTrue, DefsTeam


class ExchangeGetResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    enterprise_id: str = Field(
        ..., title='The enterprise grid organization ID containing the workspace/team.'
    )
    invalid_user_ids: Optional[List[str]] = Field(
        None, title='A list of User IDs that cannot be mapped or found'
    )
    ok: DefsOkTrue
    team_id: DefsTeam
    user_id_map: Optional[Dict[str, Any]] = Field(
        None, title='A mapping of provided user IDs with mapped user IDs'
    )


class Error(Enum):
    not_enterprise_team = 'not_enterprise_team'
    too_many_users = 'too_many_users'
    not_authed = 'not_authed'
    invalid_auth = 'invalid_auth'
    account_inactive = 'account_inactive'
    token_revoked = 'token_revoked'
    no_permission = 'no_permission'
    org_login_required = 'org_login_required'
    invalid_arg_name = 'invalid_arg_name'
    invalid_array_arg = 'invalid_array_arg'
    invalid_charset = 'invalid_charset'
    invalid_form_data = 'invalid_form_data'
    invalid_post_type = 'invalid_post_type'
    missing_post_type = 'missing_post_type'
    team_added_to_org = 'team_added_to_org'
    invalid_json = 'invalid_json'
    json_not_object = 'json_not_object'
    request_timeout = 'request_timeout'
    upgrade_required = 'upgrade_required'
    fatal_error = 'fatal_error'


class ExchangeGetResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    callstack: Optional[str] = Field(
        None, description='Note: PHP callstack is only visible in dev/qa'
    )
    error: Error
    ok: DefsOkFalse
