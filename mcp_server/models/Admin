# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:25:57+00:00

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field

from .. import DefsOkFalse, DefsOkTrue


class AddPostRequest(BaseModel):
    name: str = Field(
        ...,
        description='The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.',
    )
    token: str = Field(
        ..., description='Authentication token. Requires scope: `admin.teams:write`'
    )
    url: str = Field(
        ...,
        description='The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.',
    )


class AddPostResponse(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkTrue


class AddPostResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkFalse


class AddAliasPostRequest(BaseModel):
    alias_for: str = Field(..., description='The alias of the emoji.')
    name: str = Field(
        ...,
        description='The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.',
    )
    token: str = Field(
        ..., description='Authentication token. Requires scope: `admin.teams:write`'
    )


class AddAliasPostResponse(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkTrue


class AddAliasPostResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkFalse


class ListGetResponse(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkTrue


class ListGetResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkFalse


class RemovePostRequest(BaseModel):
    name: str = Field(
        ...,
        description='The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.',
    )
    token: str = Field(
        ..., description='Authentication token. Requires scope: `admin.teams:write`'
    )


class RemovePostResponse(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkTrue


class RemovePostResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkFalse


class RenamePostRequest(BaseModel):
    name: str = Field(
        ...,
        description='The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.',
    )
    new_name: str = Field(..., description='The new name of the emoji.')
    token: str = Field(
        ..., description='Authentication token. Requires scope: `admin.teams:write`'
    )


class RenamePostResponse(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkTrue


class RenamePostResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    ok: DefsOkFalse
