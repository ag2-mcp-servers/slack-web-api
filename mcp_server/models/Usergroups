# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:25:57+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field

from .. import DefsOkFalse, DefsOkTrue, DefsUserId, ObjsSubteam


class ListGetResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ok: DefsOkTrue
    users: List[DefsUserId]


class Error(Enum):
    not_authed = 'not_authed'
    invalid_auth = 'invalid_auth'
    account_inactive = 'account_inactive'
    token_revoked = 'token_revoked'
    no_permission = 'no_permission'
    org_login_required = 'org_login_required'
    user_is_bot = 'user_is_bot'
    user_is_restricted = 'user_is_restricted'
    invalid_arg_name = 'invalid_arg_name'
    invalid_array_arg = 'invalid_array_arg'
    invalid_charset = 'invalid_charset'
    invalid_form_data = 'invalid_form_data'
    invalid_post_type = 'invalid_post_type'
    missing_post_type = 'missing_post_type'
    team_added_to_org = 'team_added_to_org'
    invalid_json = 'invalid_json'
    json_not_object = 'json_not_object'
    request_timeout = 'request_timeout'
    upgrade_require = 'upgrade_require'
    fatal_error = 'fatal_error'
    missing_charset = 'missing_charset'
    superfluous_charset = 'superfluous_charset'


class ListGetResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    callstack: Optional[str] = Field(
        None, description='Note: PHP callstack is only visible in dev/qa'
    )
    error: Error
    ok: DefsOkFalse


class UpdatePostRequest(BaseModel):
    include_count: Optional[bool] = Field(
        None, description='Include the number of users in the User Group.'
    )
    usergroup: str = Field(
        ..., description='The encoded ID of the User Group to update.'
    )
    users: str = Field(
        ...,
        description='A comma separated string of encoded user IDs that represent the entire list of users for the User Group.',
    )


class UpdatePostResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ok: DefsOkTrue
    usergroup: ObjsSubteam


class ErrorModel(Enum):
    permission_denied = 'permission_denied'
    not_authed = 'not_authed'
    invalid_auth = 'invalid_auth'
    account_inactive = 'account_inactive'
    token_revoked = 'token_revoked'
    no_permission = 'no_permission'
    org_login_required = 'org_login_required'
    user_is_bot = 'user_is_bot'
    user_is_restricted = 'user_is_restricted'
    invalid_arg_name = 'invalid_arg_name'
    invalid_array_arg = 'invalid_array_arg'
    invalid_charset = 'invalid_charset'
    invalid_form_data = 'invalid_form_data'
    invalid_post_type = 'invalid_post_type'
    missing_post_type = 'missing_post_type'
    team_added_to_org = 'team_added_to_org'
    invalid_json = 'invalid_json'
    json_not_object = 'json_not_object'
    request_timeout = 'request_timeout'
    upgrade_require = 'upgrade_require'
    fatal_error = 'fatal_error'
    missing_charset = 'missing_charset'
    superfluous_charset = 'superfluous_charset'


class UpdatePostResponseModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    callstack: Optional[str] = Field(
        None, description='Note: PHP callstack is only visible in dev/qa'
    )
    error: ErrorModel
    ok: DefsOkFalse
